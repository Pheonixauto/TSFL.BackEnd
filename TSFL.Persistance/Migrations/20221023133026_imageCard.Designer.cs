// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TSFL.Persistance.Context;

#nullable disable

namespace TSFL.Persistance.Migrations
{
    [DbContext(typeof(TSFLDbContext))]
    [Migration("20221023133026_imageCard")]
    partial class imageCard
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TSFL.Domain.Entities.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("TSFL.Domain.Entities.CardGroupCards", b =>
                {
                    b.Property<Guid>("CardGroupCards_CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardGroupCards_GroupCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CardGroupCards_CardId", "CardGroupCards_GroupCardId");

                    b.HasIndex("CardId");

                    b.HasIndex("GroupCardId");

                    b.ToTable("CardGroupCards");
                });

            modelBuilder.Entity("TSFL.Domain.Entities.GroupCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GroupCards");
                });

            modelBuilder.Entity("TSFL.Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupCard_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupCard_Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TSFL.Domain.Entities.CardGroupCards", b =>
                {
                    b.HasOne("TSFL.Domain.Entities.Card", null)
                        .WithMany("CardGroupCard")
                        .HasForeignKey("CardId");

                    b.HasOne("TSFL.Domain.Entities.GroupCard", null)
                        .WithMany("CardGroupCards")
                        .HasForeignKey("GroupCardId");
                });

            modelBuilder.Entity("TSFL.Domain.Entities.Member", b =>
                {
                    b.HasOne("TSFL.Domain.Entities.GroupCard", "GroupCard")
                        .WithMany("Members")
                        .HasForeignKey("GroupCard_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupCard");
                });

            modelBuilder.Entity("TSFL.Domain.Entities.Card", b =>
                {
                    b.Navigation("CardGroupCard");
                });

            modelBuilder.Entity("TSFL.Domain.Entities.GroupCard", b =>
                {
                    b.Navigation("CardGroupCards");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
